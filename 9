# Clone the Mask R-CNN repository
!git clone https://github.com/akTwelve/Mask_RCNN.git

# Import libraries
import os
import sys
import skimage.io
import matplotlib.pyplot as plt
import cv2
import time
import numpy as np
import tensorflow as tf

# Root directory of the project
ROOT_DIR = "Mask_RCNN"

# Import maskrcnn (mrcnn folder) as module
sys.path.append(ROOT_DIR)

# Import modules from Mask R-CNN
from mrcnn import utils
import mrcnn.model as modellib
from mrcnn import visualize

# Directory to save logs and trained model
MODEL_DIR = os.path.join(ROOT_DIR, "logs")

# Path to the image
IMAGE_PATH = "/content/Mask_RCNN/images/1045023827_4ec3e8ba5c_z.jpg"

# Download the COCO dataset
sys.path.append(os.path.join(ROOT_DIR, "samples/coco/"))
import coco

# Path to COCO model weights
COCO_MODEL_PATH = os.path.join(ROOT_DIR, "mask_rcnn_coco.h5")
if not os.path.exists(COCO_MODEL_PATH):
    utils.download_trained_weights(COCO_MODEL_PATH)

# Load the model configuration
class InferenceConfig(coco.CocoConfig):
    GPU_COUNT = 1
    IMAGES_PER_GPU = 1

config = InferenceConfig()
config.display()

# Load the Mask R-CNN model
model = modellib.MaskRCNN(mode="inference", model_dir=MODEL_DIR, config=config)
tf.keras.Model.load_weights(model.keras_model, COCO_MODEL_PATH, by_name=True)

# Class names from the COCO dataset
class_names = ['BG', 'person', 'bicycle', 'car', 'motorcycle', 'airplane', 'bus', 'train', 'truck', 'boat', 'traffic light', 
               'fire hydrant', 'stop sign', 'parking meter', 'bench', 'bird', 'cat', 'dog', 'horse', 'sheep', 'cow', 
               'elephant', 'bear', 'zebra', 'giraffe', 'backpack', 'umbrella', 'handbag', 'tie', 'suitcase', 'frisbee', 
               'skis', 'snowboard', 'sports ball', 'kite', 'baseball bat', 'baseball glove', 'skateboard', 'surfboard', 
               'tennis racket', 'bottle', 'wine glass', 'cup', 'fork', 'knife', 'spoon', 'bowl', 'banana', 'apple', 
               'sandwich', 'orange', 'broccoli', 'carrot', 'hot dog', 'pizza', 'donut', 'cake', 'chair', 'couch', 
               'potted plant', 'bed', 'dining table', 'toilet', 'tv', 'laptop', 'mouse', 'remote', 'keyboard', 'cell phone', 
               'microwave', 'oven', 'toaster', 'sink', 'refrigerator', 'book', 'clock', 'vase', 'scissors', 'teddy bear', 
               'hair drier', 'toothbrush']

# Load and display the image
image = skimage.io.imread(IMAGE_PATH)
plt.imshow(image)
plt.title('Original')
plt.axis('off')
plt.show()

# Perform object detection and segmentation
results = model.detect([image], verbose=1)
r = results[0]

# Visualize the results
visualize.display_instances(image, r['rois'], r['masks'], r['class_ids'], class_names, r['scores'])
